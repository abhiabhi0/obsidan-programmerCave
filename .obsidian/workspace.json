{
  "main": {
    "id": "4d1f1fc1797b29d0",
    "type": "split",
    "children": [
      {
        "id": "34d20c3b7d8db301",
        "type": "tabs",
        "children": [
          {
            "id": "5393ec9ce544d4a8",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "LLD/07 - Creational Design Patterns - Singleton and Builder.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "07 - Creational Design Patterns - Singleton and Builder"
            }
          },
          {
            "id": "61c1bd90d15454a9",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "LLD/08 - Creational Design Patterns - Prototype, Factory Method and Abstract Factory.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "08 - Creational Design Patterns - Prototype, Factory Method and Abstract Factory"
            }
          },
          {
            "id": "ebd7b5dec80abd79",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "LLD/09 - Structural Design Patterns - Adapter and Flyweight.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "09 - Structural Design Patterns - Adapter and Flyweight"
            }
          },
          {
            "id": "589c0ac4bf688622",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "LLD/10 - Structural Design Patterns - Decorator and Facade.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "10 - Structural Design Patterns - Decorator and Facade"
            }
          },
          {
            "id": "000d226cda6f5167",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "LLD/11 - Behavioural Design Patterns - Observer and Strategy.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "11 - Behavioural Design Patterns - Observer and Strategy"
            }
          },
          {
            "id": "23b6b0284e02ece8",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "LLD/05 - SOLID - Single Responsibility, Open-Closed Principle.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "05 - SOLID - Single Responsibility, Open-Closed Principle"
            }
          },
          {
            "id": "940cb2769ed930c2",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "LLD/06 - SOLID - Liskov Substitution, Interface Segregation, and Dependency Inversion.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "06 - SOLID - Liskov Substitution, Interface Segregation, and Dependency Inversion"
            }
          },
          {
            "id": "b083f1b828dcd30d",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Java/Design Patterns.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Design Patterns"
            }
          },
          {
            "id": "34e9491e8f0afd6e",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Java/Diamond Problem in Java.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Diamond Problem in Java"
            }
          },
          {
            "id": "6ffab354a7b80b2b",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Java/Features of Java 8.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Features of Java 8"
            }
          },
          {
            "id": "0015b3a6671fb85a",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Java/Find even number in list using Stream API.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Find even number in list using Stream API"
            }
          },
          {
            "id": "32bf33a5586553a1",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Java/Interfaces.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Interfaces"
            }
          },
          {
            "id": "879639f06752d6ad",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Java/IOC.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "IOC"
            }
          },
          {
            "id": "d24e463b8dd5e321",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Java/JDK vs JRE vs JVM.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "JDK vs JRE vs JVM"
            }
          },
          {
            "id": "fb1050c6d98fddee",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/2PC (Two-Phase Commit).md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "2PC (Two-Phase Commit)"
            }
          },
          {
            "id": "29b90f07a92954eb",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/Microservice Architecture/How to make DB consistent and available.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "How to make DB consistent and available"
            }
          },
          {
            "id": "5498fb97453f0d96",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/Microservice Architecture/CAP Theorem.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "CAP Theorem"
            }
          },
          {
            "id": "f0ed20bb9ed9e899",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/Microservice Architecture/API Gateway.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "API Gateway"
            }
          },
          {
            "id": "93f3fa6adc552ab1",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/Authentication vs Authorization.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Authentication vs Authorization"
            }
          },
          {
            "id": "db6dcf54edd42825",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/Microservice Architecture/Improve API performance.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Improve API performance"
            }
          },
          {
            "id": "2d3fb535b2f8ba44",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/What happens when you type a URL into your browser.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "What happens when you type a URL into your browser"
            }
          },
          {
            "id": "2da4353472dcd09b",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Golang/Ping-Pong Example.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Ping-Pong Example"
            }
          },
          {
            "id": "2cb80c9b05164bac",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Golang/Closing a Channel.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Closing a Channel"
            }
          },
          {
            "id": "7c3fd8e9e6d7c606",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Golang/Concurrency in Go.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Concurrency in Go"
            }
          },
          {
            "id": "87f5d88b31d43d12",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Golang/Concurrency Patterns.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Concurrency Patterns"
            }
          },
          {
            "id": "ae81c40fe0f0250a",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Golang/Concurrency vs Parallelism.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Concurrency vs Parallelism"
            }
          },
          {
            "id": "f71973004bd28beb",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Golang/Context.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Context"
            }
          },
          {
            "id": "6df345c11d2a2666",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Golang/Type Assertion in Go.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Type Assertion in Go"
            }
          },
          {
            "id": "06a4d9b4e31067f0",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Golang/Array vs Slice.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Array vs Slice"
            }
          },
          {
            "id": "2df0271ecc4704c3",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Python/Garbage Collector.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Garbage Collector"
            }
          },
          {
            "id": "f20cc71c528820a0",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Python/Generators.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Generators"
            }
          },
          {
            "id": "3103970eb07b217c",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Python/Lambda Function.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Lambda Function"
            }
          },
          {
            "id": "da130f11e36b4691",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Python/Shallow Copy vs Deep Copy.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Shallow Copy vs Deep Copy"
            }
          },
          {
            "id": "c9e6a35812473b49",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Python/GIL.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "GIL"
            }
          },
          {
            "id": "3ce8293aed5dd37a",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/Concurrency Control Protocol.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Concurrency Control Protocol"
            }
          },
          {
            "id": "a02a3d2aaac82736",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/Microservice Architecture/CDN.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "CDN"
            }
          },
          {
            "id": "ae1d36c254447402",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/Microservice Architecture/Database Sharding.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Database Sharding"
            }
          },
          {
            "id": "0f20ca5190756543",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/Microservice Architecture/JSON Web Token (JWT).md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "JSON Web Token (JWT)"
            }
          },
          {
            "id": "9b9d1242bb46878d",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/Kafka/Kafka.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Kafka"
            }
          },
          {
            "id": "a85928be5b7b8f1b",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/Redis.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Redis"
            }
          },
          {
            "id": "afa3cada3f46744d",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/REST.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "REST"
            }
          },
          {
            "id": "0443b6e55ef285c1",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/Microservice Architecture/REST API Authentication Methods.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "REST API Authentication Methods"
            }
          },
          {
            "id": "0bb8b9179fd892a9",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/Types of load balancing algorithms.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Types of load balancing algorithms"
            }
          },
          {
            "id": "045c6a6e369cecda",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Java/Multithreading.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Multithreading"
            }
          },
          {
            "id": "39f4bb42e516436b",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Java/Spring vs Spring Boot.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Spring vs Spring Boot"
            }
          },
          {
            "id": "8a679fcef92d4544",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Java/String.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "String"
            }
          },
          {
            "id": "0aa78bb1b421ab5a",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Java/Anonymous Class.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Anonymous Class"
            }
          },
          {
            "id": "a7dd7eceaf31b69f",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Java/Collections.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Collections"
            }
          },
          {
            "id": "496218b7c89c872d",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Java/Dependency Injection.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Dependency Injection"
            }
          },
          {
            "id": "4af8bbacb5c7b7c4",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/Kafka/02 - Message Delivery Guarantees in Kafka.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "02 - Message Delivery Guarantees in Kafka"
            }
          }
        ],
        "currentTab": 26
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "590516e80920d713",
    "type": "split",
    "children": [
      {
        "id": "7cac4d77185aa7f5",
        "type": "tabs",
        "children": [
          {
            "id": "b4904ce9751ea41b",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              },
              "icon": "lucide-folder-closed",
              "title": "Files"
            }
          },
          {
            "id": "d59691f8b8b70e9c",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              },
              "icon": "lucide-search",
              "title": "Search"
            }
          },
          {
            "id": "e12744f22cb74856",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {},
              "icon": "lucide-bookmark",
              "title": "Bookmarks"
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 407.50418853759766
  },
  "right": {
    "id": "107f5edfe773bdb6",
    "type": "split",
    "children": [
      {
        "id": "3cdc6cb448adcac1",
        "type": "tabs",
        "children": [
          {
            "id": "846cf53ff19fec75",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "Golang/Context.md"
              },
              "icon": "lucide-list",
              "title": "Outline of Context"
            }
          },
          {
            "id": "5b018e7d7793db47",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "Golang/Context.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              },
              "icon": "links-coming-in",
              "title": "Backlinks for Context"
            }
          },
          {
            "id": "df334f1cd96fc7d3",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "Golang/Context.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              },
              "icon": "links-going-out",
              "title": "Outgoing links from Context"
            }
          }
        ],
        "currentTab": 2
      }
    ],
    "direction": "horizontal",
    "width": 341.5
  },
  "left-ribbon": {
    "hiddenItems": {
      "obsidian-custom-frames:Open ChatGPT": false,
      "omnisearch:Omnisearch": false,
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "command-palette:Open command palette": false,
      "obsidian-excalidraw-plugin:Create new drawing": false
    }
  },
  "active": "f71973004bd28beb",
  "lastOpenFiles": [
    "Golang/Concurrency vs Parallelism.md",
    "Golang/Concurrency Patterns.md",
    "Golang/Concurrency in Go.md",
    "Golang/Closing a Channel.md",
    "Golang/Array vs Slice.md",
    "Golang/Type Assertion in Go.md",
    "Python/Shallow Copy vs Deep Copy.md",
    "Python/Lambda Function.md",
    "Python/Generators.md",
    "Python/Garbage Collector.md",
    "Python/GIL.md",
    "Golang/Ping-Pong Example.md",
    "Golang/Handle Memory leak in Go.md",
    "Golang/Context.md",
    "Interview Prep/What happens when you type a URL into your browser.md",
    "Interview Prep/Microservice Architecture/Improve API performance.md",
    "Interview Prep/Types of load balancing algorithms.md",
    "Interview Prep/Microservice Architecture/REST API Authentication Methods.md",
    "Interview Prep/REST.md",
    "Interview Prep/Redis.md",
    "Interview Prep/Kafka/Kafka.md",
    "Interview Prep/Microservice Architecture/JSON Web Token (JWT).md",
    "Interview Prep/Microservice Architecture/Database Sharding.md",
    "Interview Prep/Microservice Architecture/CDN.md",
    "Interview Prep/Concurrency Control Protocol.md",
    "Interview Prep/Untitled.md",
    "Interview Prep/Microservice Architecture",
    "Interview Prep/Kafka",
    "Interview Prep/01 - Resume Questions",
    "Interview Prep/GRPC",
    "DSA/Dynamic Programming",
    "DSA/Hashing",
    "DSA/Array",
    "DSA/Two Pointers",
    "DSA/Binary Search",
    "DSA/Heap",
    "Pasted image 20240603131241.png",
    "Pasted image 20240604102843.png",
    "Pasted image 20240622221813.png",
    "Pasted image 20240625174445.png",
    "Untitled.canvas",
    "{40406506-B515-4027-9F76-E876EFFF6A52}.png",
    "{83C64CEA-B5C9-46DD-8E6D-5E3D6C0BDC22}.png",
    "{8A8DDE8D-1119-4ABC-AF90-4B4C908F4D7D}.png",
    "{6B34DB5F-7646-477A-8243-1E8BA8A8C0BB}.png",
    "{FB486C91-55BB-4F7F-84C2-B312B5B4ABA2}.png",
    "{83289A2E-3DF1-4003-8389-26C48AB69B96}.png",
    "Untitled 1.canvas"
  ]
}