{
  "main": {
    "id": "4d1f1fc1797b29d0",
    "type": "split",
    "children": [
      {
        "id": "71a219ea24aa1329",
        "type": "tabs",
        "children": [
          {
            "id": "1cd238e7f2e1a81b",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "DSA/Heap/Converting an Array into a Min Heap.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Converting an Array into a Min Heap"
            }
          },
          {
            "id": "430c17e11b9f2819",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "DSA/Heap/Finding the Ath Largest Element in Subarrays.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Finding the Ath Largest Element in Subarrays"
            }
          },
          {
            "id": "85a78b6eed9a3691",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "System Design/01 - Splitwise.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "01 - Splitwise"
            }
          },
          {
            "id": "88c0ef314ccaf15d",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "System Design/01 - Splitwise.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "01 - Splitwise"
            }
          },
          {
            "id": "dec0af68ad6bee1d",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "LLD/11 - Behavioural Design Patterns - Observer and Strategy.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "11 - Behavioural Design Patterns - Observer and Strategy"
            }
          },
          {
            "id": "1463654a05d2e4ba",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Golang/Memory Management in Go.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Memory Management in Go"
            }
          },
          {
            "id": "655aa7542ae66f0a",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Golang/Garbage Collector in Go.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Garbage Collector in Go"
            }
          },
          {
            "id": "92a5be4bd45ffcbb",
            "type": "leaf",
            "state": {
              "type": "graph",
              "state": {},
              "icon": "lucide-git-fork",
              "title": "Graph view"
            }
          },
          {
            "id": "3b1eeb5cb68bbcca",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "System Design/LRU Cache.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "LRU Cache"
            }
          },
          {
            "id": "9913d8efc21ea13c",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "System Design/Snake and Ladder.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Snake and Ladder"
            }
          },
          {
            "id": "ca9a6f193e9db9a2",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "System Design/TrueCaller.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "TrueCaller"
            }
          },
          {
            "id": "5700cfa6f8678281",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "LLD/07 - Creational Design Patterns - Singleton and Builder.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "07 - Creational Design Patterns - Singleton and Builder"
            }
          },
          {
            "id": "336c7e11b18ef64e",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "LLD/08 - Creational Design Patterns - Prototype, Factory Method and Abstract Factory.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "08 - Creational Design Patterns - Prototype, Factory Method and Abstract Factory"
            }
          },
          {
            "id": "276a002690d3d10d",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "System Design/Design Image chat application.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Design Image chat application"
            }
          },
          {
            "id": "cbfed5340f72ae2e",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/How to deploy in production such that background jobs are not stopped.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "How to deploy in production such that background jobs are not stopped"
            }
          },
          {
            "id": "0be7470d5fba18e9",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Golang/For range vs For i on string.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "For range vs For i on string"
            }
          },
          {
            "id": "9c0b5529fc2f9ea8",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "DSA/Sorting/Merge Sort.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Merge Sort"
            }
          },
          {
            "id": "5f6ede511c239983",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Golang/What is Middleware.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "What is Middleware"
            }
          },
          {
            "id": "cbdfd07071ec76f5",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Golang/Garbage Collector in Go.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Garbage Collector in Go"
            }
          },
          {
            "id": "a302b2efb6c51b49",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/DB/SQL vs NoSQL.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "SQL vs NoSQL"
            }
          },
          {
            "id": "cd97c8f46e59684b",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Golang/Context.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Context"
            }
          },
          {
            "id": "f5c21be9d013bed2",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/Best ways to test system functionality.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Best ways to test system functionality"
            }
          },
          {
            "id": "84af3594ab3e88f9",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/DB/Database Sharding.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Database Sharding"
            }
          },
          {
            "id": "6d969e3e606acfc1",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/Top 5 caching strategies.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Top 5 caching strategies"
            }
          },
          {
            "id": "66f6eb25968bd30b",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "Interview Prep/Why do we need message brokers.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Why do we need message brokers"
            }
          }
        ],
        "currentTab": 7
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "590516e80920d713",
    "type": "split",
    "children": [
      {
        "id": "7cac4d77185aa7f5",
        "type": "tabs",
        "children": [
          {
            "id": "b4904ce9751ea41b",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              },
              "icon": "lucide-folder-closed",
              "title": "Files"
            }
          },
          {
            "id": "d59691f8b8b70e9c",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              },
              "icon": "lucide-search",
              "title": "Search"
            }
          },
          {
            "id": "e12744f22cb74856",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {},
              "icon": "lucide-bookmark",
              "title": "Bookmarks"
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 407.50418853759766
  },
  "right": {
    "id": "107f5edfe773bdb6",
    "type": "split",
    "children": [
      {
        "id": "3cdc6cb448adcac1",
        "type": "tabs",
        "children": [
          {
            "id": "846cf53ff19fec75",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {},
              "icon": "lucide-list",
              "title": "Outline"
            }
          },
          {
            "id": "5b018e7d7793db47",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "Golang/Defer, Panic, and Recover.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              },
              "icon": "links-coming-in",
              "title": "Backlinks for Defer, Panic, and Recover"
            }
          },
          {
            "id": "df334f1cd96fc7d3",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "LLD/10 - Structural Design Patterns - Decorator and Facade.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              },
              "icon": "links-going-out",
              "title": "Outgoing links from 10 - Structural Design Patterns - Decorator and Facade"
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 341.5
  },
  "left-ribbon": {
    "hiddenItems": {
      "obsidian-custom-frames:Open ChatGPT": false,
      "omnisearch:Omnisearch": false,
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "command-palette:Open command palette": false,
      "obsidian-excalidraw-plugin:Create new drawing": false
    }
  },
  "active": "92a5be4bd45ffcbb",
  "lastOpenFiles": [
    "Golang/Handle Memory leak in Go.md",
    "Golang/Garbage Collector in Go.md",
    "Golang/Memory Management in Go.md",
    "LLD/11 - Behavioural Design Patterns - Observer and Strategy.md",
    "System Design/01 - Splitwise.md",
    "LLD/08 - Creational Design Patterns - Prototype, Factory Method and Abstract Factory.md",
    "LLD/07 - Creational Design Patterns - Singleton and Builder.md",
    "01 - Splitwise-class-diagram.png",
    "01 - Splitwise-sequence-diagram.png",
    "01 - Splitwise-hld.png",
    "Splitwise-design-diagram.png",
    "System Design/Bill Sharing.md",
    "System Design/Design Image chat application.md",
    "Interview Prep/Why do we need message brokers.md",
    "{9AB602BF-E198-43A8-9912-55E72504950A}.png",
    "Interview Prep/Top 7 Most-Used Distributed System Patterns.md",
    "{149CA686-468A-41CD-BF7D-165CAE2A013D}.png",
    "Interview Prep/Where do we cache data.md",
    "{BDA84EDB-31D0-4325-B755-B132BF47513A}.png",
    "Interview Prep/DB/Types of DB.md",
    "{BDA29B48-8A0C-424C-9631-1E57FA77FD47}.png",
    "Kubernetes/Kubernetes.md",
    "{8EF46AC2-4003-47F7-95E7-1228DC21FF3D}.png",
    "Interview Prep/Top 5 caching strategies.md",
    "{B91EFF56-5391-4176-951B-9B0C64048469}.png",
    "Interview Prep/What is the difference between Process and Thread.md",
    "Interview Prep/Microservice Architecture/Untitled.md",
    "Interview Prep/Git Merge vs. Rebase.md",
    "Kubernetes/Top 4 Kubernetes Service Types.md",
    "Interview Prep/Types of load balancing algorithms.md",
    "Interview Prep/Cookies vs Session.md",
    "Interview Prep/API architecture styles.md",
    "Interview Prep/Microservice Architecture/18 Key Design Patterns Every Developer Should Know.md",
    "Interview Prep/Microservice Architecture/Best practices for developing microservices.md",
    "Kubernetes/API Gateway.md",
    "Interview Prep/Microservice Architecture/API Gateway.md",
    "Interview Prep/SQL Queries",
    "Interview Prep/DB",
    "Interview Prep/Microservice Architecture",
    "Interview Prep/Kafka",
    "Interview Prep/01 - Resume Questions",
    "Interview Prep/GRPC",
    "DSA/Dynamic Programming",
    "DSA/Hashing",
    "DSA/Array",
    "DSA/Two Pointers",
    "Untitled.canvas",
    "Untitled 1.canvas"
  ]
}