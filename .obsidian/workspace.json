{
  "main": {
    "id": "4d1f1fc1797b29d0",
    "type": "split",
    "children": [
      {
        "id": "9c4aed218c582571",
        "type": "tabs",
        "children": [
          {
            "id": "13f927f42712bfa5",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "01 - Golang/00 - Index.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "00 - Index"
            }
          },
          {
            "id": "a5db8410e7ef6536",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "01 - Golang/Goroutines Examples/Using two goroutines print even and odd in natural sequence.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "Using two goroutines print even and odd in natural sequence"
            }
          },
          {
            "id": "ad392f214f6b2336",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "01 - Golang/Goroutines/0500 - Go runtime.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "0500 - Go runtime"
            }
          },
          {
            "id": "0cc4a214716a00a0",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "01 - Golang/reflect package.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "reflect package"
            }
          }
        ],
        "currentTab": 1
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "590516e80920d713",
    "type": "split",
    "children": [
      {
        "id": "7cac4d77185aa7f5",
        "type": "tabs",
        "children": [
          {
            "id": "b4904ce9751ea41b",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              },
              "icon": "lucide-folder-closed",
              "title": "Files"
            }
          },
          {
            "id": "d59691f8b8b70e9c",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              },
              "icon": "lucide-search",
              "title": "Search"
            }
          },
          {
            "id": "e12744f22cb74856",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {},
              "icon": "lucide-bookmark",
              "title": "Bookmarks"
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 597.5041885375977
  },
  "right": {
    "id": "107f5edfe773bdb6",
    "type": "split",
    "children": [
      {
        "id": "3cdc6cb448adcac1",
        "type": "tabs",
        "children": [
          {
            "id": "846cf53ff19fec75",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "01 - Golang/Goroutines Examples/Using two goroutines print even and odd in natural sequence.md"
              },
              "icon": "lucide-list",
              "title": "Outline of Using two goroutines print even and odd in natural sequence"
            }
          },
          {
            "id": "5b018e7d7793db47",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "System Design/Design Tic-Tac-Toe.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              },
              "icon": "links-coming-in",
              "title": "Backlinks for Design Tic-Tac-Toe"
            }
          },
          {
            "id": "df334f1cd96fc7d3",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "LLD/10 - Structural Design Patterns - Decorator and Facade.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              },
              "icon": "links-going-out",
              "title": "Outgoing links from 10 - Structural Design Patterns - Decorator and Facade"
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 341.5
  },
  "left-ribbon": {
    "hiddenItems": {
      "obsidian-custom-frames:Open ChatGPT": false,
      "omnisearch:Omnisearch": false,
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "command-palette:Open command palette": false,
      "obsidian-excalidraw-plugin:Create new drawing": false,
      "oz-clear-unused-images:Clear Unused Images": false
    }
  },
  "active": "a5db8410e7ef6536",
  "lastOpenFiles": [
    "01 - Golang/00 - Index.md",
    "01 - Golang/Goroutines/0500 - Go runtime.md",
    "01 - Golang/reflect package.md",
    "01 - Golang/0400 - Defer, Panic, and Recover.md",
    "01 - Golang/Goroutines/How to make goroutines run on same thread.md",
    "01 - Golang/0100 - Why Go is the fastest language.md",
    "01 - Golang/Goâ€™s Static Typing and Single Binary Deployment.md",
    "01 - Golang/0302 - Handle Memory leak in Go.md",
    "01 - Golang/0301 - Garbage Collector in Go.md",
    "01 - Golang/0300 - Memory Management in Go.md",
    "01 - Golang/Goroutines/0100 - Goroutines.md",
    "01 - Golang/Goroutines/0700 - select in Golang.md",
    "01 - Golang/Goroutines/0600 - Concurrency vs Parallelism.md",
    "01 - Golang/Goroutines/0400 - Concurrency Patterns.md",
    "01 - Golang/Goroutines/0300 - Goroutines vs Threads.md",
    "01 - Golang/Goroutines/0200 - Lifecycle and Scheduling of a Goroutine.md",
    "01 - Golang/Goroutines/0101 - Concurrency in Go.md",
    "01 - Golang/Design Patterns.md",
    "01 - Golang/Interface example to select game for students.md",
    "01 - Golang/Goroutines Examples/Print table of N using Goroutine.md",
    "03 - Django/2300 - Advanced Django - WSGI, Docker, and Deployment.md",
    "03 - Django/2200 - Advanced Django - Prefetching and Indexing.md",
    "03 - Django/2100 - Advanced Django - Optimizing Queries.md",
    "03 - Django/2000 - Advanced Django - Deep Dive into Django ORM.md",
    "03 - Django/1900 - Advanced Django - Django Admin and Permissions.md",
    "03 - Django/1800 - Advanced Django - Creating Custom Middleware.md",
    "03 - Django",
    "00 - Software engg/LLD Examples",
    "LLD/12 - LLD Examples",
    "zimages/{D92169F8-D298-4668-BF2F-64B699E1B367}.png",
    "zimages/{C27387EA-B357-4568-9CD2-058F436D5812}.png",
    "zimages/{67719E14-40B2-4314-8A13-E9416E11F82B}.png",
    "zimages/Design-a-Pen-using-abstract-class.png",
    "00 - Software engg/Distributed System",
    "01 - Golang/Goroutines Examples",
    "zimages/Defer-unreachable-example.png",
    "zimages/{1BB17EC0-9998-412E-9530-1A4456ECA5EB}.png",
    "zimages/01 - Splitwise-class-diagram.png",
    "zimages",
    "01 - Golang/Goroutines",
    "zimages/01 - Splitwise-sequence-diagram.png",
    "zimages/01 - Splitwise-hld.png",
    "zimages/Splitwise-design-diagram.png",
    "00 - Software engg/SQL Queries",
    "00 - Software engg/DB",
    "00 - Software engg/Microservice Architecture",
    "zimages/Untitled.canvas",
    "Untitled 1.canvas"
  ]
}