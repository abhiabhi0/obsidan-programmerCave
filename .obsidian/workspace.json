{
  "main": {
    "id": "4d1f1fc1797b29d0",
    "type": "split",
    "children": [
      {
        "id": "2f2e1bf9e70b3795",
        "type": "tabs",
        "children": [
          {
            "id": "4050b0f2b8b89e9f",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "01 - System Design/Design Examples/01 - Design a unique ID generator.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "01 - Design a unique ID generator"
            }
          },
          {
            "id": "02c6695c87f3a8dd",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "00 - Software engg/LLD/08 - Creational Design Patterns - Prototype, Factory Method and Abstract Factory.md",
                "mode": "source",
                "backlinks": true,
                "source": false
              },
              "icon": "lucide-file",
              "title": "08 - Creational Design Patterns - Prototype, Factory Method and Abstract Factory"
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "590516e80920d713",
    "type": "split",
    "children": [
      {
        "id": "7cac4d77185aa7f5",
        "type": "tabs",
        "children": [
          {
            "id": "b4904ce9751ea41b",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              },
              "icon": "lucide-folder-closed",
              "title": "Files"
            }
          },
          {
            "id": "d59691f8b8b70e9c",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              },
              "icon": "lucide-search",
              "title": "Search"
            }
          },
          {
            "id": "e12744f22cb74856",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {},
              "icon": "lucide-bookmark",
              "title": "Bookmarks"
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 448.50418853759766
  },
  "right": {
    "id": "107f5edfe773bdb6",
    "type": "split",
    "children": [
      {
        "id": "3cdc6cb448adcac1",
        "type": "tabs",
        "children": [
          {
            "id": "846cf53ff19fec75",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "01 - System Design/Design Examples/01 - Design a unique ID generator.md"
              },
              "icon": "lucide-list",
              "title": "Outline of 01 - Design a unique ID generator"
            }
          },
          {
            "id": "5b018e7d7793db47",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "System Design/Design Tic-Tac-Toe.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              },
              "icon": "links-coming-in",
              "title": "Backlinks for Design Tic-Tac-Toe"
            }
          },
          {
            "id": "df334f1cd96fc7d3",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "LLD/10 - Structural Design Patterns - Decorator and Facade.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              },
              "icon": "links-going-out",
              "title": "Outgoing links from 10 - Structural Design Patterns - Decorator and Facade"
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 281.5
  },
  "left-ribbon": {
    "hiddenItems": {
      "obsidian-custom-frames:Open ChatGPT": false,
      "omnisearch:Omnisearch": false,
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "command-palette:Open command palette": false,
      "obsidian-excalidraw-plugin:Create new drawing": false,
      "oz-clear-unused-images:Clear Unused Images": false
    }
  },
  "active": "4050b0f2b8b89e9f",
  "lastOpenFiles": [
    "04 - Java/0100 - Design Patterns in Java.md",
    "01 - System Design/Design Examples/01 - Design a unique ID generator.md",
    "01 - System Design/Design Examples",
    "01 - System Design",
    "01 - System Design/LLD/08 - Creational Design Patterns - Prototype, Factory Method and Abstract Factory.md",
    "01 - System Design/LLD/0001 - Design Patterns Summarized.md",
    "01 - Golang/00 - Index.md",
    "01 - Golang/1102 - Slice concept based question - Append and Equal.md",
    "01 - Golang/1101 - Array vs Slice.md",
    "01 - Golang/1100 - Slice.md",
    "03 - DSA/Array/Maximum length of a contiguous subarray consisting only of 1s from the given binary array.md",
    "01 - Golang/1001 - Why writing test case for handler function is complicated.md",
    "05 - Design APIs and Data modes/0100 - Design an API and data models for creating, submitting, visualizing, and editing surveys.md",
    "00 - Software engg/GRPC/10 - How can you handle authentication and authorization in gRPC services.md",
    "05 - Design APIs and Data modes",
    "00 - Software engg/GRPC/09 - What is the role of gRPC server in a client-server architecture.md",
    "00 - Software engg/GRPC/08 - How can you secure a gRPC connection.md",
    "00 - Software engg/GRPC/07 - What Are gRPC Stubs.md",
    "00 - Software engg/GRPC/06 - What Are Interceptors in gRPC.md",
    "00 - Software engg/GRPC/05 - How Errors Work in gRPC.md",
    "00 - Software engg/GRPC/04 - unary, server streaming, client streaming, and bidirectional streaming.md",
    "00 - Software engg/GRPC/03 - What are Protocol Buffers (ProtoBuf).md",
    "00 - Software engg/GRPC/02 - Main Components of a gRPC Service.md",
    "00 - Software engg/GRPC/01 - gRPC vs. RESTful APIs.md",
    "00 - Software engg/GRPC/00 - Introduction.md",
    "00 - Software engg/Kubernetes/Workflow of JWT.md",
    "00 - Software engg/Kubernetes/Top 4 Kubernetes Service Types.md",
    "00 - Software engg/Kubernetes/0108 - Kubernetes Secrets.md",
    "00 - Software engg/Kubernetes/0105 - Kubernetes.md",
    "zimages/Kubernetes-Architecture.png",
    "03 - Django",
    "01 - System Design/LLD Examples",
    "LLD/12 - LLD Examples",
    "zimages/{D92169F8-D298-4668-BF2F-64B699E1B367}.png",
    "zimages/{C27387EA-B357-4568-9CD2-058F436D5812}.png",
    "zimages/{67719E14-40B2-4314-8A13-E9416E11F82B}.png",
    "zimages/Design-a-Pen-using-abstract-class.png",
    "00 - Software engg/Distributed System",
    "01 - Golang/Goroutines Examples",
    "zimages/Defer-unreachable-example.png",
    "zimages/{1BB17EC0-9998-412E-9530-1A4456ECA5EB}.png",
    "zimages/01 - Splitwise-class-diagram.png",
    "zimages",
    "01 - Golang/Goroutines",
    "zimages/01 - Splitwise-sequence-diagram.png",
    "zimages/01 - Splitwise-hld.png",
    "zimages/Untitled.canvas",
    "Untitled 1.canvas"
  ]
}